<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on</title><link>https://prachee.me/tags/C/</link><description>Recent content in C on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://prachee.me/tags/C/index.xml" rel="self" type="application/rss+xml"/><item><title>File System</title><link>https://prachee.me/notes/File-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/File-System/</guid><description>File System The file system provides organization for the files through a directory structure + maintains metadata related to files.</description></item><item><title>Fundamentals of C</title><link>https://prachee.me/notes/Fundamentals-of-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Fundamentals-of-C/</guid><description>Overview of C
It is a procedural language. It has functions but it&amp;rsquo;s not a functional programming language, unlike C++ which has object-oriented capabilities.</description></item><item><title>GooseLang - Custom Programming Language</title><link>https://prachee.me/notes/GooseLang-Custom-Programming-Language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/GooseLang-Custom-Programming-Language/</guid><description>Note: Made in good fun, and having your own programming language is cool~
Over the past month, I&amp;rsquo;ve been working on creating my own programming language, GooseLang.</description></item><item><title>Heap Sort</title><link>https://prachee.me/notes/Heap-Sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Heap-Sort/</guid><description>Background Information: [[Heaps]]</description></item><item><title>Heaps</title><link>https://prachee.me/notes/Heaps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Heaps/</guid><description>Heap: Data structure, array object that can be represented as a binary tree.
Each element of the array is a node on the tree To compute indices of the: parent of node $i$: Floor of $\frac{i}{2}$ Left child of node $i$: $2i$ Right child of node $i$: $2i + 1$ Each of these can be computed in 1-2 instructions e.</description></item><item><title>Introduction to OS</title><link>https://prachee.me/notes/Introduction-to-OS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Introduction-to-OS/</guid><description>Operating System: It sits between hardware and programs. OS as a Resource Manager, the &amp;ldquo;secretary&amp;rdquo; of the system
Responsible for resource managements and allocation, cause resources (e.</description></item><item><title>Lexer</title><link>https://prachee.me/notes/Lexer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Lexer/</guid><description>Lexing, short for lexical analysis, takes in source code as series of characters and creates a series of chunks called tokens.</description></item><item><title>LLVM</title><link>https://prachee.me/notes/LLVM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/LLVM/</guid><description>Acronym for low level virtual machine, collection of compiler technologies
It&amp;rsquo;s a library that makes it easier to create new programming languages.</description></item><item><title>Multi-threaded Web Server</title><link>https://prachee.me/notes/HTTP-Web-Server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/HTTP-Web-Server/</guid><description>Background
[[Fundamentals of C]] [[Socket Programming]] Idea: Not to reinvent the wheel but to learn more about the wheel HTTP is just text, a protocol for browsers to send and receive information from servers.</description></item><item><title>Parsing</title><link>https://prachee.me/notes/Parsing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Parsing/</guid><description>A parser turns the list of tokens generated from the [[notes/Lexer|Lexer]] into a tree of nodes, called an Abstract Syntax Tree (AST).</description></item><item><title>Socket Programming</title><link>https://prachee.me/notes/Socket-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Socket-Programming/</guid><description>Sockets allow for Inter-Process Communication (IPC) between two different processes on same/different machines.
Socket Programming is connecting two nodes on a network so they can communicate.</description></item></channel></rss>