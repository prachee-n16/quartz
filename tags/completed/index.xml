<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>completed on</title><link>https://prachee.me/tags/completed/</link><description>Recent content in completed on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://prachee.me/tags/completed/index.xml" rel="self" type="application/rss+xml"/><item><title>Assumptions of Linear Regression</title><link>https://prachee.me/notes/Assumptions-of-Linear-Regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Assumptions-of-Linear-Regression/</guid><description>Anscombe&amp;rsquo;s Quartet - A group of four data sets with nearly identical descriptive statistics, yet different distributions and graphs. These are prime examples of why it&amp;rsquo;s important to be selective on when to use linear regression!</description></item><item><title>Avro</title><link>https://prachee.me/notes/Avro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Avro/</guid><description>Each record has a header that describes the structure of data it contains Data is stored as binary information, and information in header is used to parse data and extract fields Good format for compressing data, minimize storage and network bandwidth requirements Evolution of data formats to Avro: With [[notes/Delimited Text Files|Delimited Text Files]], there are some disadvantages:</description></item><item><title>Braitenberg vehicles</title><link>https://prachee.me/notes/Braitenberg-vehicles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Braitenberg-vehicles/</guid><description>Source: Braitenberg Vehicle Wiki
This was a thought experiment by Valentino Braitenberg.
In the simplest form of this experiment, a Braitenberg vehicle is a machine with a light sensor and a motor.</description></item><item><title>Collector's Fallacy</title><link>https://prachee.me/notes/Collectors-Fallacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Collectors-Fallacy/</guid><description>To know about something is not the same as knowing something.
The idea here is that we like collecting information, hoping that it will be useful down the way.</description></item><item><title>Data Formats</title><link>https://prachee.me/notes/Data-Formats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Data-Formats/</guid><description>[!tip] TLDR
Data can be structured, unstructured or aggregated Structured data is data that can be modelled. For example, text, numbers can fit into data tables Unstructured data is data that is hard to model due it&amp;rsquo;s size or nature.</description></item><item><title>Delimited Text Files</title><link>https://prachee.me/notes/Delimited-Text-Files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Delimited-Text-Files/</guid><description>Technology examples: CSV, TSV files
Stored in plain text format with specific field delimiters and row terminators In CSV (comma-separated values), field delimiters = comma and row terminators = new line First line may contain title to columns Also, TSV (tab-separated values) with only difference being field delimiters = tabs Space-delimited where spaces and tabs are used to separate columns Fixed-width data where each field has fixed number of characters More detailed explanation here: https://www.</description></item><item><title>File Access Mechanisms in Filesystems</title><link>https://prachee.me/notes/File-Access-Mechanisms-in-Filesystems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/File-Access-Mechanisms-in-Filesystems/</guid><description>Files usually have some permissions associated with them:
Read Write Execute Append (write at the end of the file) Delete List (view the attributes of the file) Access control</description></item><item><title>File System</title><link>https://prachee.me/notes/File-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/File-System/</guid><description>File System The file system provides organization for the files through a directory structure + maintains metadata related to files.</description></item><item><title>Function Composition in JavaScript</title><link>https://prachee.me/notes/Function-Composition-in-Javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Function-Composition-in-Javascript/</guid><description>JavaScript is a multi-paradigm programming language - it has supports for several [[Programming Paradigm]], including [[Functional Programming]].
Function Piping vs. Composition</description></item><item><title>Fundamentals of C</title><link>https://prachee.me/notes/Fundamentals-of-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Fundamentals-of-C/</guid><description>Overview of C
It is a procedural language. It has functions but it&amp;rsquo;s not a functional programming language, unlike C++ which has object-oriented capabilities.</description></item><item><title>Image Feature Vector</title><link>https://prachee.me/notes/Image-Feature-Vector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Image-Feature-Vector/</guid><description>A way to abstract information i.e. image, so that it&amp;rsquo;s numerically quantifiable. Simply put, a list of numbers that represents an image.</description></item><item><title>Image Formats &amp; Compression Comparision</title><link>https://prachee.me/notes/Image-Formats-Compression-Comparision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Image-Formats-Compression-Comparision/</guid><description>Digital graphic files will generally fall into two categories:
Raster graphics are created using a grid of tiny pixels, making them very simple Vector graphics are creating using detailed paths of points &amp;amp; lines to render images.</description></item><item><title>JSON</title><link>https://prachee.me/notes/JSON/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/JSON/</guid><description>JavaScript Object Notation, hierarchical document schema to define objects with many attributes
Best demonstrated with an example:
1 2 3 4 5 6 7 8 9 10 11 12 13 { &amp;#34;fruits&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;apple&amp;#34;, &amp;#34;colour&amp;#34;: [&amp;#34;red&amp;#34;] }, { &amp;#34;name&amp;#34;: &amp;#34;orange&amp;#34;, &amp;#34;colour&amp;#34;: [&amp;#34;orange&amp;#34;], &amp;#34;taste&amp;#34;: &amp;#34;interesting&amp;#34; } ] }</description></item><item><title>ORC</title><link>https://prachee.me/notes/ORC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/ORC/</guid><description>Optimized Row Columnar Format, organized into columns that optimize read/write operations for Apache Hive
Apache Hive: data warehouse that has fast data summarization and querying over large datasets Columnar storage format to allow for optimized column-based operations like filtering/aggregation ORC stores data in a series of stripes where each strip is a collection of rows.</description></item><item><title>Parquet</title><link>https://prachee.me/notes/Parquet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Parquet/</guid><description>Open-source columnar storage file format used for big data processing
Columnar storage format to allow for optimized column-based operations like filtering/aggregation Data in parquet file is divided into columns, and groups of columns are organized into row groups each row group contains a section of data, and group of columns are organized into row groups each row group has some data, and columns within a row group are stored together Parquet files contains metadata that define structure of data.</description></item><item><title>XML</title><link>https://prachee.me/notes/XML/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/XML/</guid><description>Markup language that provides rules to define data
tags in XML are markup symbols to define data allows for data coding to get information flows across systems XML schema (XSD): document that describes rules on structure of XML file XML parser: process or read XML files to extract data, check syntax or validate against schema Note: While similar in appearances, this is different from HTML ability to define custom tags, as opposed to pre-defined HTML tags HTML is for content, XML stores and transports data XML is case-sensitive, HTML is not.</description></item><item><title>Zettel</title><link>https://prachee.me/notes/Zettel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Zettel/</guid><description>Essentially, a single note on one particular topic! The anatomy of a zettel looks like:
Unique Identifier: an unambiguous address This is mandatory!</description></item><item><title>Zettelkasten</title><link>https://prachee.me/notes/Zettelkasten/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Zettelkasten/</guid><description>Note: I&amp;rsquo;m referencing zettelkasten.de to understand how to incorporate this into my daily note-taking!
Contrary to what a &amp;ldquo;[[Zettel]]&amp;rdquo; should be, i.</description></item></channel></rss>