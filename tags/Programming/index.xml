<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on</title><link>https://prachee.me/tags/Programming/</link><description>Recent content in Programming on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://prachee.me/tags/Programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Compiled and Interpreted Languages</title><link>https://prachee.me/notes/Compiled-and-Interpreted-Languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Compiled-and-Interpreted-Languages/</guid><description>All in all, both compilers and interpreters will convert human-readable code (unless it&amp;rsquo;s brainfuck) and convert it to computer-readable machine code.</description></item><item><title>Data Structures and Algorithms</title><link>https://prachee.me/notes/Data-Structures-and-Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Data-Structures-and-Algorithms/</guid><description>Algorithm: Set of steps that transforms an input to desired output, often to solve some computational problem Data Structures: Way to store and organize data</description></item><item><title>Fundamentals of C</title><link>https://prachee.me/notes/Fundamentals-of-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Fundamentals-of-C/</guid><description>Overview of C
It is a procedural language. It has functions but it&amp;rsquo;s not a functional programming language, unlike C++ which has object-oriented capabilities.</description></item><item><title>GooseLang - Custom Programming Language</title><link>https://prachee.me/notes/GooseLang-Custom-Programming-Language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/GooseLang-Custom-Programming-Language/</guid><description>Over the past month, I&amp;rsquo;ve been working on creating my own programming language, GooseLang. It has nothing to do with geese - just has all the things I love about Python, C, Java etc compiled into one!</description></item><item><title>Heap Sort</title><link>https://prachee.me/notes/Heap-Sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Heap-Sort/</guid><description>Background Information: [[Heaps]]</description></item><item><title>Heaps</title><link>https://prachee.me/notes/Heaps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Heaps/</guid><description>Heap: Data structure, array object that can be represented as a binary tree.
Each element of the array is a node on the tree To compute indices of the: parent of node $i$: Floor of $\frac{i}{2}$ Left child of node $i$: $2i$ Right child of node $i$: $2i + 1$ Each of these can be computed in 1-2 instructions e.</description></item><item><title>Lexer</title><link>https://prachee.me/notes/Lexer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Lexer/</guid><description>Lexing, short for lexical analysis, takes in source code as series of characters and creates a series of chunks called tokens.</description></item><item><title>Relational Databases</title><link>https://prachee.me/notes/Relational-Databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Relational-Databases/</guid><description>Store and query structured data which is stored in tables that represent entities
Each instance of an entity is assigned a unique identifier called primary key Normalized databases: referencing entities with their primary key, allows for no duplicate data values Use SQL to manage and query database</description></item><item><title>Sorting</title><link>https://prachee.me/notes/Sorting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Sorting/</guid><description>Personal effort to document every sorting algorithm that I could get my hands on:
Insertion Sort Merge Sort [[Heap Sort]] Quicksort Counting Sort Radix Sort Bucket Sort</description></item><item><title>Transactional Data Processing</title><link>https://prachee.me/notes/Transactional-Data-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Transactional-Data-Processing/</guid><description>Record transactions that capture business events a company wants to track
Think of financial transactions: a bank would capture when money is deposited or taken out.</description></item></channel></rss>