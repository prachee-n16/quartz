<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DataFundamentals on</title><link>https://prachee.me/tags/DataFundamentals/</link><description>Recent content in DataFundamentals on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://prachee.me/tags/DataFundamentals/index.xml" rel="self" type="application/rss+xml"/><item><title>Avro</title><link>https://prachee.me/notes/Avro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Avro/</guid><description>Each record has a header that describes the structure of data it contains Data is stored as binary information, and information in header is used to parse data and extract fields Good format for compressing data, minimize storage and network bandwidth requirements Evolution of data formats to Avro: With [[notes/Delimited Text Files|Delimited Text Files]], there are some disadvantages:</description></item><item><title>BLOB</title><link>https://prachee.me/notes/BLOB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/BLOB/</guid><description>Binary Large Object
All files are stored as binary data Commonly used to store images, video, audio and app-specific documents</description></item><item><title>Data Formats</title><link>https://prachee.me/notes/Data-Formats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Data-Formats/</guid><description>[!tip] TLDR
Data can be structured, unstructured or aggregated Structured data is data that can be modelled. For example, text, numbers can fit into data tables Unstructured data is data that is hard to model due it&amp;rsquo;s size or nature.</description></item><item><title>Data Stores</title><link>https://prachee.me/notes/Data-Stores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Data-Stores/</guid><description>There are two broad categories of data store:
file stores databases File Stores Store data in files
The file format used to store data depends on:</description></item><item><title>Delimited Text Files</title><link>https://prachee.me/notes/Delimited-Text-Files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Delimited-Text-Files/</guid><description>Technology examples: CSV, TSV files
Stored in plain text format with specific field delimiters and row terminators In CSV (comma-separated values), field delimiters = comma and row terminators = new line First line may contain title to columns Also, TSV (tab-separated values) with only difference being field delimiters = tabs Space-delimited where spaces and tabs are used to separate columns Fixed-width data where each field has fixed number of characters More detailed explanation here: https://www.</description></item><item><title>JSON</title><link>https://prachee.me/notes/JSON/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/JSON/</guid><description>JavaScript Object Notation, hierarchical document schema to define objects with many attributes
Best demonstrated with an example:
1 2 3 4 5 6 7 8 9 10 11 12 13 { &amp;#34;fruits&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;apple&amp;#34;, &amp;#34;colour&amp;#34;: [&amp;#34;red&amp;#34;] }, { &amp;#34;name&amp;#34;: &amp;#34;orange&amp;#34;, &amp;#34;colour&amp;#34;: [&amp;#34;orange&amp;#34;], &amp;#34;taste&amp;#34;: &amp;#34;interesting&amp;#34; } ] }</description></item><item><title>Non-relational Databases</title><link>https://prachee.me/notes/Non-relational-Databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Non-relational-Databases/</guid><description/></item><item><title>ORC</title><link>https://prachee.me/notes/ORC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/ORC/</guid><description>Optimized Row Columnar Format, organized into columns that optimize read/write operations for Apache Hive
Apache Hive: data warehouse that has fast data summarization and querying over large datasets Columnar storage format to allow for optimized column-based operations like filtering/aggregation ORC stores data in a series of stripes where each strip is a collection of rows.</description></item><item><title>Parquet</title><link>https://prachee.me/notes/Parquet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Parquet/</guid><description>Open-source columnar storage file format used for big data processing
Columnar storage format to allow for optimized column-based operations like filtering/aggregation Data in parquet file is divided into columns, and groups of columns are organized into row groups each row group contains a section of data, and group of columns are organized into row groups each row group has some data, and columns within a row group are stored together Parquet files contains metadata that define structure of data.</description></item><item><title>Relational Databases</title><link>https://prachee.me/notes/Relational-Databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/Relational-Databases/</guid><description/></item><item><title>XML</title><link>https://prachee.me/notes/XML/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prachee.me/notes/XML/</guid><description>Markup language that provides rules to define data
tags in XML are markup symbols to define data allows for data coding to get information flows across systems XML schema (XSD): document that describes rules on structure of XML file XML parser: process or read XML files to extract data, check syntax or validate against schema Note: While similar in appearances, this is different from HTML ability to define custom tags, as opposed to pre-defined HTML tags HTML is for content, XML stores and transports data XML is case-sensitive, HTML is not.</description></item></channel></rss>